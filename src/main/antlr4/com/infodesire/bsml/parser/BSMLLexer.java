// Generated from java-escape by ANTLR 4.11.1
package com.infodesire.bsml.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class BSMLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		QUERY=1, WHERE=2, OR=3, AND=4, NOT=5, ACTION=6, LESS=7, LESS_OR_EQUAL=8, 
		EQUAL=9, NOT_EQUAL=10, GREATER=11, GREATER_OR_EQUAL=12, STARTS_WITH=13, 
		ENDS_WITH=14, LIKE=15, CONTAINS=16, LCURLY=17, RCURLY=18, IDENTIFIER=19, 
		COLON=20, NEWLINE=21, WHITESPACE=22, LINE_COMMENT=23, VALUE=24, EOL=25;
	public static final int
		UNTIL_EOL=1;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "UNTIL_EOL"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"QUERY", "WHERE", "OR", "AND", "NOT", "ACTION", "LESS", "LESS_OR_EQUAL", 
			"EQUAL", "NOT_EQUAL", "GREATER", "GREATER_OR_EQUAL", "STARTS_WITH", "ENDS_WITH", 
			"LIKE", "CONTAINS", "LCURLY", "RCURLY", "IDENTIFIER", "COLON", "NEWLINE", 
			"WHITESPACE", "LINE_COMMENT", "VALUE", "EOL"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'QUERY'", "'WHERE'", "'OR'", "'AND'", "'NOT'", "'ACTION'", "'<'", 
			"'<='", "'='", "'!='", "'>'", "'>='", "'STARTS_WITH'", "'ENDS_WITH'", 
			"'LIKE'", "'CONTAINS'", "'{'", "'}'", null, "':'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "QUERY", "WHERE", "OR", "AND", "NOT", "ACTION", "LESS", "LESS_OR_EQUAL", 
			"EQUAL", "NOT_EQUAL", "GREATER", "GREATER_OR_EQUAL", "STARTS_WITH", "ENDS_WITH", 
			"LIKE", "CONTAINS", "LCURLY", "RCURLY", "IDENTIFIER", "COLON", "NEWLINE", 
			"WHITESPACE", "LINE_COMMENT", "VALUE", "EOL"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public BSMLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BSMLLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0019\u00c7\u0006\uffff\uffff\u0006\uffff\uffff\u0002\u0000"+
		"\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003"+
		"\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006"+
		"\u0007\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002"+
		"\n\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002"+
		"\u000e\u0007\u000e\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002"+
		"\u0011\u0007\u0011\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002"+
		"\u0014\u0007\u0014\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002"+
		"\u0017\u0007\u0017\u0002\u0018\u0007\u0018\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t"+
		"\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f"+
		"\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011"+
		"\u0001\u0012\u0001\u0012\u0005\u0012\u00a0\b\u0012\n\u0012\f\u0012\u00a3"+
		"\t\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0005\u0016\u00b5"+
		"\b\u0016\n\u0016\f\u0016\u00b8\t\u0016\u0001\u0016\u0001\u0016\u0001\u0017"+
		"\u0005\u0017\u00bd\b\u0017\n\u0017\f\u0017\u00c0\t\u0017\u0001\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u00be\u0000"+
		"\u0019\u0002\u0001\u0004\u0002\u0006\u0003\b\u0004\n\u0005\f\u0006\u000e"+
		"\u0007\u0010\b\u0012\t\u0014\n\u0016\u000b\u0018\f\u001a\r\u001c\u000e"+
		"\u001e\u000f \u0010\"\u0011$\u0012&\u0013(\u0014*\u0015,\u0016.\u0017"+
		"0\u00182\u0019\u0002\u0000\u0001\u0004\u0002\u0000AZaz\u0004\u0000..0"+
		"9AZaz\u0002\u0000\n\n\r\r\u0002\u0000\t\t  \u00c8\u0000\u0002\u0001\u0000"+
		"\u0000\u0000\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0006\u0001\u0000"+
		"\u0000\u0000\u0000\b\u0001\u0000\u0000\u0000\u0000\n\u0001\u0000\u0000"+
		"\u0000\u0000\f\u0001\u0000\u0000\u0000\u0000\u000e\u0001\u0000\u0000\u0000"+
		"\u0000\u0010\u0001\u0000\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0000"+
		"\u0000\u0014\u0001\u0000\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0000"+
		"\u0000\u0018\u0001\u0000\u0000\u0000\u0000\u001a\u0001\u0000\u0000\u0000"+
		"\u0000\u001c\u0001\u0000\u0000\u0000\u0000\u001e\u0001\u0000\u0000\u0000"+
		"\u0000 \u0001\u0000\u0000\u0000\u0000\"\u0001\u0000\u0000\u0000\u0000"+
		"$\u0001\u0000\u0000\u0000\u0000&\u0001\u0000\u0000\u0000\u0000(\u0001"+
		"\u0000\u0000\u0000\u0000*\u0001\u0000\u0000\u0000\u0000,\u0001\u0000\u0000"+
		"\u0000\u0000.\u0001\u0000\u0000\u0000\u00010\u0001\u0000\u0000\u0000\u0001"+
		"2\u0001\u0000\u0000\u0000\u00024\u0001\u0000\u0000\u0000\u0004:\u0001"+
		"\u0000\u0000\u0000\u0006@\u0001\u0000\u0000\u0000\bC\u0001\u0000\u0000"+
		"\u0000\nG\u0001\u0000\u0000\u0000\fK\u0001\u0000\u0000\u0000\u000eR\u0001"+
		"\u0000\u0000\u0000\u0010V\u0001\u0000\u0000\u0000\u0012[\u0001\u0000\u0000"+
		"\u0000\u0014_\u0001\u0000\u0000\u0000\u0016d\u0001\u0000\u0000\u0000\u0018"+
		"h\u0001\u0000\u0000\u0000\u001am\u0001\u0000\u0000\u0000\u001c{\u0001"+
		"\u0000\u0000\u0000\u001e\u0087\u0001\u0000\u0000\u0000 \u008e\u0001\u0000"+
		"\u0000\u0000\"\u0099\u0001\u0000\u0000\u0000$\u009b\u0001\u0000\u0000"+
		"\u0000&\u009d\u0001\u0000\u0000\u0000(\u00a4\u0001\u0000\u0000\u0000*"+
		"\u00a8\u0001\u0000\u0000\u0000,\u00ac\u0001\u0000\u0000\u0000.\u00b0\u0001"+
		"\u0000\u0000\u00000\u00be\u0001\u0000\u0000\u00002\u00c5\u0001\u0000\u0000"+
		"\u000045\u0005Q\u0000\u000056\u0005U\u0000\u000067\u0005E\u0000\u0000"+
		"78\u0005R\u0000\u000089\u0005Y\u0000\u00009\u0003\u0001\u0000\u0000\u0000"+
		":;\u0005W\u0000\u0000;<\u0005H\u0000\u0000<=\u0005E\u0000\u0000=>\u0005"+
		"R\u0000\u0000>?\u0005E\u0000\u0000?\u0005\u0001\u0000\u0000\u0000@A\u0005"+
		"O\u0000\u0000AB\u0005R\u0000\u0000B\u0007\u0001\u0000\u0000\u0000CD\u0005"+
		"A\u0000\u0000DE\u0005N\u0000\u0000EF\u0005D\u0000\u0000F\t\u0001\u0000"+
		"\u0000\u0000GH\u0005N\u0000\u0000HI\u0005O\u0000\u0000IJ\u0005T\u0000"+
		"\u0000J\u000b\u0001\u0000\u0000\u0000KL\u0005A\u0000\u0000LM\u0005C\u0000"+
		"\u0000MN\u0005T\u0000\u0000NO\u0005I\u0000\u0000OP\u0005O\u0000\u0000"+
		"PQ\u0005N\u0000\u0000Q\r\u0001\u0000\u0000\u0000RS\u0005<\u0000\u0000"+
		"ST\u0001\u0000\u0000\u0000TU\u0006\u0006\u0000\u0000U\u000f\u0001\u0000"+
		"\u0000\u0000VW\u0005<\u0000\u0000WX\u0005=\u0000\u0000XY\u0001\u0000\u0000"+
		"\u0000YZ\u0006\u0007\u0000\u0000Z\u0011\u0001\u0000\u0000\u0000[\\\u0005"+
		"=\u0000\u0000\\]\u0001\u0000\u0000\u0000]^\u0006\b\u0000\u0000^\u0013"+
		"\u0001\u0000\u0000\u0000_`\u0005!\u0000\u0000`a\u0005=\u0000\u0000ab\u0001"+
		"\u0000\u0000\u0000bc\u0006\t\u0000\u0000c\u0015\u0001\u0000\u0000\u0000"+
		"de\u0005>\u0000\u0000ef\u0001\u0000\u0000\u0000fg\u0006\n\u0000\u0000"+
		"g\u0017\u0001\u0000\u0000\u0000hi\u0005>\u0000\u0000ij\u0005=\u0000\u0000"+
		"jk\u0001\u0000\u0000\u0000kl\u0006\u000b\u0000\u0000l\u0019\u0001\u0000"+
		"\u0000\u0000mn\u0005S\u0000\u0000no\u0005T\u0000\u0000op\u0005A\u0000"+
		"\u0000pq\u0005R\u0000\u0000qr\u0005T\u0000\u0000rs\u0005S\u0000\u0000"+
		"st\u0005_\u0000\u0000tu\u0005W\u0000\u0000uv\u0005I\u0000\u0000vw\u0005"+
		"T\u0000\u0000wx\u0005H\u0000\u0000xy\u0001\u0000\u0000\u0000yz\u0006\f"+
		"\u0000\u0000z\u001b\u0001\u0000\u0000\u0000{|\u0005E\u0000\u0000|}\u0005"+
		"N\u0000\u0000}~\u0005D\u0000\u0000~\u007f\u0005S\u0000\u0000\u007f\u0080"+
		"\u0005_\u0000\u0000\u0080\u0081\u0005W\u0000\u0000\u0081\u0082\u0005I"+
		"\u0000\u0000\u0082\u0083\u0005T\u0000\u0000\u0083\u0084\u0005H\u0000\u0000"+
		"\u0084\u0085\u0001\u0000\u0000\u0000\u0085\u0086\u0006\r\u0000\u0000\u0086"+
		"\u001d\u0001\u0000\u0000\u0000\u0087\u0088\u0005L\u0000\u0000\u0088\u0089"+
		"\u0005I\u0000\u0000\u0089\u008a\u0005K\u0000\u0000\u008a\u008b\u0005E"+
		"\u0000\u0000\u008b\u008c\u0001\u0000\u0000\u0000\u008c\u008d\u0006\u000e"+
		"\u0000\u0000\u008d\u001f\u0001\u0000\u0000\u0000\u008e\u008f\u0005C\u0000"+
		"\u0000\u008f\u0090\u0005O\u0000\u0000\u0090\u0091\u0005N\u0000\u0000\u0091"+
		"\u0092\u0005T\u0000\u0000\u0092\u0093\u0005A\u0000\u0000\u0093\u0094\u0005"+
		"I\u0000\u0000\u0094\u0095\u0005N\u0000\u0000\u0095\u0096\u0005S\u0000"+
		"\u0000\u0096\u0097\u0001\u0000\u0000\u0000\u0097\u0098\u0006\u000f\u0000"+
		"\u0000\u0098!\u0001\u0000\u0000\u0000\u0099\u009a\u0005{\u0000\u0000\u009a"+
		"#\u0001\u0000\u0000\u0000\u009b\u009c\u0005}\u0000\u0000\u009c%\u0001"+
		"\u0000\u0000\u0000\u009d\u00a1\u0007\u0000\u0000\u0000\u009e\u00a0\u0007"+
		"\u0001\u0000\u0000\u009f\u009e\u0001\u0000\u0000\u0000\u00a0\u00a3\u0001"+
		"\u0000\u0000\u0000\u00a1\u009f\u0001\u0000\u0000\u0000\u00a1\u00a2\u0001"+
		"\u0000\u0000\u0000\u00a2\'\u0001\u0000\u0000\u0000\u00a3\u00a1\u0001\u0000"+
		"\u0000\u0000\u00a4\u00a5\u0005:\u0000\u0000\u00a5\u00a6\u0001\u0000\u0000"+
		"\u0000\u00a6\u00a7\u0006\u0013\u0000\u0000\u00a7)\u0001\u0000\u0000\u0000"+
		"\u00a8\u00a9\u0007\u0002\u0000\u0000\u00a9\u00aa\u0001\u0000\u0000\u0000"+
		"\u00aa\u00ab\u0006\u0014\u0001\u0000\u00ab+\u0001\u0000\u0000\u0000\u00ac"+
		"\u00ad\u0007\u0003\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000\u00ae"+
		"\u00af\u0006\u0015\u0001\u0000\u00af-\u0001\u0000\u0000\u0000\u00b0\u00b1"+
		"\u0005/\u0000\u0000\u00b1\u00b2\u0005/\u0000\u0000\u00b2\u00b6\u0001\u0000"+
		"\u0000\u0000\u00b3\u00b5\b\u0002\u0000\u0000\u00b4\u00b3\u0001\u0000\u0000"+
		"\u0000\u00b5\u00b8\u0001\u0000\u0000\u0000\u00b6\u00b4\u0001\u0000\u0000"+
		"\u0000\u00b6\u00b7\u0001\u0000\u0000\u0000\u00b7\u00b9\u0001\u0000\u0000"+
		"\u0000\u00b8\u00b6\u0001\u0000\u0000\u0000\u00b9\u00ba\u0006\u0016\u0001"+
		"\u0000\u00ba/\u0001\u0000\u0000\u0000\u00bb\u00bd\t\u0000\u0000\u0000"+
		"\u00bc\u00bb\u0001\u0000\u0000\u0000\u00bd\u00c0\u0001\u0000\u0000\u0000"+
		"\u00be\u00bf\u0001\u0000\u0000\u0000\u00be\u00bc\u0001\u0000\u0000\u0000"+
		"\u00bf\u00c1\u0001\u0000\u0000\u0000\u00c0\u00be\u0001\u0000\u0000\u0000"+
		"\u00c1\u00c2\u00032\u0018\u0000\u00c2\u00c3\u0001\u0000\u0000\u0000\u00c3"+
		"\u00c4\u0006\u0017\u0002\u0000\u00c41\u0001\u0000\u0000\u0000\u00c5\u00c6"+
		"\u0007\u0002\u0000\u0000\u00c63\u0001\u0000\u0000\u0000\u0005\u0000\u0001"+
		"\u00a1\u00b6\u00be\u0003\u0005\u0001\u0000\u0006\u0000\u0000\u0004\u0000"+
		"\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}